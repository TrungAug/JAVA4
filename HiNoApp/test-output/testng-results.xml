<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="214" passed="166" failed="48" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-12-07T14:01:28 ICT" name="SuiteHiNo" finished-at="2023-12-07T14:01:29 ICT" duration-ms="1109">
    <groups>
    </groups>
    <test started-at="2023-12-07T14:01:28 ICT" name="main-suite-test1" finished-at="2023-12-07T14:01:29 ICT" duration-ms="1109">
      <class name="com.ttt.TEST.TestPhieuNhap">
        <test-method signature="checkExistSoKhungTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@3c9754d8]" started-at="2023-12-07T14:01:28 ICT" name="checkExistSoKhungTest" data-provider="dataCheckSK" finished-at="2023-12-07T14:01:28 ICT" duration-ms="41" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[SK 788]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PN2023072100001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Đã tồn tại số khung]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Đã tồn tại số khung] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Đã tồn tại số khung] but found []
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.ttt.TEST.TestPhieuNhap.checkExistSoKhungTest(TestPhieuNhap.java:38)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkExistSoKhungTest -->
        <test-method signature="checkExistSoKhungTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@3c9754d8]" started-at="2023-12-07T14:01:28 ICT" name="checkExistSoKhungTest" data-provider="dataCheckSK" finished-at="2023-12-07T14:01:28 ICT" duration-ms="42" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
[public void com.ttt.TEST.TestPhieuNhap.checkExistSoKhungTest(java.lang.String,java.lang.String,java.lang.String)] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: checkExistSoKhungTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) SK 3377,(java.lang.String) PX2023072800004,(java.lang.Boolean) false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
[public void com.ttt.TEST.TestPhieuNhap.checkExistSoKhungTest(java.lang.String,java.lang.String,java.lang.String)] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: checkExistSoKhungTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) SK 3377,(java.lang.String) PX2023072800004,(java.lang.Boolean) false]
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:43)
at org.testng.internal.Parameters.injectParameters(Parameters.java:914)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:34)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkExistSoKhungTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@3c9754d8]" started-at="2023-12-07T14:01:28 ICT" name="checkNullTest" data-provider="checkNullDataProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[SK123456789123456]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SM456]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-1000]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Không được nhập âm giá]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@3c9754d8]" started-at="2023-12-07T14:01:28 ICT" name="checkNullTest" data-provider="checkNullDataProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[SK123456789123456]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SM456]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1000]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@3c9754d8]" started-at="2023-12-07T14:01:28 ICT" name="checkNullTest" data-provider="checkNullDataProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SM456]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1000]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Vui lòng nhập số khung]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@3c9754d8]" started-at="2023-12-07T14:01:28 ICT" name="checkNullTest" data-provider="checkNullDataProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[SK123456789123456]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1000]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Vui lòng nhập số máy]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@3c9754d8]" started-at="2023-12-07T14:01:28 ICT" name="checkNullTest" data-provider="checkNullDataProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[SK123456789123456]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SM456]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Giá nhập sai kiểu dữ liệu]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@3c9754d8]" started-at="2023-12-07T14:01:28 ICT" name="checkNullTest" data-provider="checkNullDataProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Vui lòng nhập dữ liệu]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@3c9754d8]" started-at="2023-12-07T14:01:28 ICT" name="checkNullTest" data-provider="checkNullDataProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[SK123456789123456]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SM456]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Giá nhập sai kiểu dữ liệu]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@3c9754d8]" started-at="2023-12-07T14:01:28 ICT" name="checkNullTest" data-provider="checkNullDataProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[SK123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SM456]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1000]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Số khung phải có 17 ký tự]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Số khung phải có 17 ký tự] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Số khung phải có 17 ký tự] but found []
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.ttt.TEST.TestPhieuNhap.checkNullTest(TestPhieuNhap.java:78)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@3c9754d8]" started-at="2023-12-07T14:01:28 ICT" name="checkNullTest" data-provider="checkNullDataProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[SK123456789123456SK]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SM456]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1000]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Số khung phải có 17 ký tự]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Số khung phải có 17 ký tự] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Số khung phải có 17 ký tự] but found []
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.ttt.TEST.TestPhieuNhap.checkNullTest(TestPhieuNhap.java:78)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="getFormChiTietPhieuNhapSuaTest(java.lang.String,java.lang.String,java.util.Date,java.util.Date,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,boolean)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@3c9754d8]" started-at="2023-12-07T14:01:28 ICT" name="getFormChiTietPhieuNhapSuaTest" data-provider="getFormChiTietPhieuNhapSua" finished-at="2023-12-07T14:01:28 ICT" duration-ms="17" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[PN2023081700007]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[NV2023073000009]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Thu Dec 07 14:01:28 ICT 2023]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Thu Dec 07 14:01:28 ICT 2023]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[NV2023072100007]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[VT04]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[FCJLTC]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[SK 12345678]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[SM987654]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[900]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:819)
at org.testng.Assert.assertEquals(Assert.java:829)
at com.ttt.TEST.TestPhieuNhap.getFormChiTietPhieuNhapSuaTest(TestPhieuNhap.java:184)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFormChiTietPhieuNhapSuaTest -->
        <test-method signature="getFormChiTietPhieuNhapThemTest(java.lang.String,java.lang.String,java.util.Date,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@3c9754d8]" started-at="2023-12-07T14:01:28 ICT" name="getFormChiTietPhieuNhapThemTest" data-provider="getFormChiTietPhieuNhapThem" finished-at="2023-12-07T14:01:28 ICT" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[PN2023120500007]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[NV2023073000009]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Thu Dec 07 14:01:28 ICT 2023]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[VT04]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[XZU730LMB]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[SK 12345678]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[SM987654]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[900]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:819)
at org.testng.Assert.assertEquals(Assert.java:829)
at com.ttt.TEST.TestPhieuNhap.getFormChiTietPhieuNhapThemTest(TestPhieuNhap.java:132)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFormChiTietPhieuNhapThemTest -->
        <test-method signature="getFormPNTest(java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@3c9754d8]" started-at="2023-12-07T14:01:28 ICT" name="getFormPNTest" data-provider="dataGeFormPN" finished-at="2023-12-07T14:01:28 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[them]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[PN2023081700008]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[NV2023073000009]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Test case checkNull false]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFormPNTest -->
        <test-method signature="getFormPNTest(java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@3c9754d8]" started-at="2023-12-07T14:01:28 ICT" name="getFormPNTest" data-provider="dataGeFormPN" finished-at="2023-12-07T14:01:28 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sua]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[PN2023072100005]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[NV2023073000009]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Test case checkNull false]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFormPNTest -->
        <test-method signature="getFormPNTest(java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@3c9754d8]" started-at="2023-12-07T14:01:28 ICT" name="getFormPNTest" data-provider="dataGeFormPN" finished-at="2023-12-07T14:01:28 ICT" duration-ms="19" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sua]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[PN2023072100005]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[NV2023073000009]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Test case checkNull true]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[getFormPN Successfully]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFormPNTest -->
        <test-method signature="getFormPNTest(java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@3c9754d8]" started-at="2023-12-07T14:01:28 ICT" name="getFormPNTest" data-provider="dataGeFormPN" finished-at="2023-12-07T14:01:28 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[them]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[PN2023081700008]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[NV2023073000009]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Test case checkNull true]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[getFormPN Successfully]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFormPNTest -->
        <test-method signature="isExist_PhieuNhapTest(java.lang.String,boolean)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@3c9754d8]" started-at="2023-12-07T14:01:28 ICT" name="isExist_PhieuNhapTest" data-provider="dataIsExist_PhieuNhap" finished-at="2023-12-07T14:01:29 ICT" duration-ms="25" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PN2023072700006]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isExist_PhieuNhapTest -->
        <test-method signature="isExist_PhieuNhapTest(java.lang.String,boolean)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@3c9754d8]" started-at="2023-12-07T14:01:29 ICT" name="isExist_PhieuNhapTest" data-provider="dataIsExist_PhieuNhap" finished-at="2023-12-07T14:01:29 ICT" duration-ms="38" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PN2023072100003]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isExist_PhieuNhapTest -->
        <test-method signature="isExist_PhieuNhapTest(java.lang.String,boolean)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@3c9754d8]" started-at="2023-12-07T14:01:29 ICT" name="isExist_PhieuNhapTest" data-provider="dataIsExist_PhieuNhap" finished-at="2023-12-07T14:01:29 ICT" duration-ms="30" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PN2023120500003]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isExist_PhieuNhapTest -->
        <test-method signature="isExist_PhieuNhapTest(java.lang.String,boolean)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@3c9754d8]" started-at="2023-12-07T14:01:29 ICT" name="isExist_PhieuNhapTest" data-provider="dataIsExist_PhieuNhap" finished-at="2023-12-07T14:01:29 ICT" duration-ms="25" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PN2023120500006]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isExist_PhieuNhapTest -->
        <test-method signature="suaPhieuNhapTest(java.lang.String,java.lang.String,java.util.Date,java.util.Date,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,java.lang.String,java.util.Date,java.lang.String,java.util.Date,boolean,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@3c9754d8]" started-at="2023-12-07T14:01:29 ICT" name="suaPhieuNhapTest" data-provider="dataSuaPhieuNhap" finished-at="2023-12-07T14:01:29 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PN2023120500007]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[NV2023073000009]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Thu Dec 07 14:01:29 ICT 2023]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Thu Dec 07 14:01:29 ICT 2023]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[NV2023081700016]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[sua PN]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="7">
              <value is-null="true"/>
            </param>
            <param index="8">
              <value is-null="true"/>
            </param>
            <param index="9">
              <value is-null="true"/>
            </param>
            <param index="10">
              <value>
                <![CDATA[VT03]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[FCJLTC]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[SK3399]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[SM6771]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[700]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="19">
              <value is-null="true"/>
            </param>
            <param index="20">
              <value is-null="true"/>
            </param>
            <param index="21">
              <value is-null="true"/>
            </param>
            <param index="22">
              <value is-null="true"/>
            </param>
            <param index="23">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="24">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suaPhieuNhapTest -->
        <test-method signature="suaPhieuNhapTest(java.lang.String,java.lang.String,java.util.Date,java.util.Date,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,java.lang.String,java.util.Date,java.lang.String,java.util.Date,boolean,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@3c9754d8]" started-at="2023-12-07T14:01:29 ICT" name="suaPhieuNhapTest" data-provider="dataSuaPhieuNhap" finished-at="2023-12-07T14:01:29 ICT" duration-ms="65" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PN2023120500007]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[NV2023073000009]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Thu Dec 07 14:01:29 ICT 2023]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Thu Dec 07 14:01:29 ICT 2023]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[NV2023081700016]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[sua PN]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="7">
              <value is-null="true"/>
            </param>
            <param index="8">
              <value is-null="true"/>
            </param>
            <param index="9">
              <value is-null="true"/>
            </param>
            <param index="10">
              <value>
                <![CDATA[VT03]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[FCJLTC]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[SK3949]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[SM7171]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[700]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="19">
              <value is-null="true"/>
            </param>
            <param index="20">
              <value is-null="true"/>
            </param>
            <param index="21">
              <value is-null="true"/>
            </param>
            <param index="22">
              <value is-null="true"/>
            </param>
            <param index="23">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="24">
              <value>
                <![CDATA[Sửa thành công]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suaPhieuNhapTest -->
        <test-method signature="themPhieuNhapTest(java.lang.String,java.lang.String,java.util.Date,java.util.Date,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,java.lang.String,java.util.Date,java.lang.String,java.util.Date,boolean,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@3c9754d8]" started-at="2023-12-07T14:01:29 ICT" name="themPhieuNhapTest" data-provider="datathemPhieuNhap" finished-at="2023-12-07T14:01:29 ICT" duration-ms="149" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[PN2023120500007]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[NV2023073000009]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Thu Dec 07 14:01:29 ICT 2023]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[dienGiai]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="7">
              <value is-null="true"/>
            </param>
            <param index="8">
              <value is-null="true"/>
            </param>
            <param index="9">
              <value is-null="true"/>
            </param>
            <param index="10">
              <value>
                <![CDATA[VT03]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[FCJLTC]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[SK5051]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[SM7375]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[700]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="19">
              <value is-null="true"/>
            </param>
            <param index="20">
              <value is-null="true"/>
            </param>
            <param index="21">
              <value is-null="true"/>
            </param>
            <param index="22">
              <value is-null="true"/>
            </param>
            <param index="23">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="24">
              <value>
                <![CDATA[Thêm mới thành công]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Thêm mới thành công] but found [Đã thêm xe vào phiếu nhập]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Thêm mới thành công] but found [Đã thêm xe vào phiếu nhập]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.ttt.TEST.TestPhieuNhap.themPhieuNhapTest(TestPhieuNhap.java:370)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themPhieuNhapTest -->
        <test-method signature="themPhieuNhapTest(java.lang.String,java.lang.String,java.util.Date,java.util.Date,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,java.lang.String,java.util.Date,java.lang.String,java.util.Date,boolean,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@3c9754d8]" started-at="2023-12-07T14:01:29 ICT" name="themPhieuNhapTest" data-provider="datathemPhieuNhap" finished-at="2023-12-07T14:01:29 ICT" duration-ms="165" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PN2023072100003]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[NV2023073000009]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Thu Dec 07 14:01:29 ICT 2023]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[dienGiai]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="7">
              <value is-null="true"/>
            </param>
            <param index="8">
              <value is-null="true"/>
            </param>
            <param index="9">
              <value is-null="true"/>
            </param>
            <param index="10">
              <value>
                <![CDATA[VT03]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[FCJLTC]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[SK8054]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[SM7979]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[700]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="19">
              <value is-null="true"/>
            </param>
            <param index="20">
              <value is-null="true"/>
            </param>
            <param index="21">
              <value is-null="true"/>
            </param>
            <param index="22">
              <value is-null="true"/>
            </param>
            <param index="23">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="24">
              <value>
                <![CDATA[Đã thêm xe vào phiếu nhập]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themPhieuNhapTest -->
        <test-method signature="themXeVaoPhieuNhapTest(boolean,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@3c9754d8]" started-at="2023-12-07T14:01:29 ICT" name="themXeVaoPhieuNhapTest" data-provider="dataChiTietPhieuNhap" finished-at="2023-12-07T14:01:29 ICT" duration-ms="43" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SK 7543]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[PN2023072100004]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Đã tồn tại số khung]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themXeVaoPhieuNhapTest -->
        <test-method signature="themXeVaoPhieuNhapTest(boolean,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@3c9754d8]" started-at="2023-12-07T14:01:29 ICT" name="themXeVaoPhieuNhapTest" data-provider="dataChiTietPhieuNhap" finished-at="2023-12-07T14:01:29 ICT" duration-ms="38" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SK8054]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[PN2023072100004]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Đã tồn tại số khung]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Đã tồn tại số khung] but found [Đã thêm xe vào phiếu nhập]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Đã tồn tại số khung] but found [Đã thêm xe vào phiếu nhập]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.ttt.TEST.TestPhieuNhap.themXeVaoPhieuNhapTest(TestPhieuNhap.java:270)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themXeVaoPhieuNhapTest -->
        <test-method signature="themXeVaoPhieuNhapTest(boolean,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@3c9754d8]" started-at="2023-12-07T14:01:29 ICT" name="themXeVaoPhieuNhapTest" data-provider="dataChiTietPhieuNhap" finished-at="2023-12-07T14:01:29 ICT" duration-ms="32" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SK3949]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[PN2023120500003]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Đã tồn tại số khung]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Đã tồn tại số khung] but found [Đã thêm xe vào phiếu nhập]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Đã tồn tại số khung] but found [Đã thêm xe vào phiếu nhập]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.ttt.TEST.TestPhieuNhap.themXeVaoPhieuNhapTest(TestPhieuNhap.java:270)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themXeVaoPhieuNhapTest -->
        <test-method signature="themXeVaoPhieuNhapTest(boolean,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@3c9754d8]" started-at="2023-12-07T14:01:29 ICT" name="themXeVaoPhieuNhapTest" data-provider="dataChiTietPhieuNhap" finished-at="2023-12-07T14:01:29 ICT" duration-ms="31" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SK7122]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[PN2023120500004]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Đã thêm xe vào phiếu nhập]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themXeVaoPhieuNhapTest -->
        <test-method signature="themXeVaoPhieuNhapTest(boolean,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@3c9754d8]" started-at="2023-12-07T14:01:29 ICT" name="themXeVaoPhieuNhapTest" data-provider="dataChiTietPhieuNhap" finished-at="2023-12-07T14:01:29 ICT" duration-ms="27" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SK7123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[PN2023072100002]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Đã thêm xe vào phiếu nhập]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themXeVaoPhieuNhapTest -->
        <test-method signature="themXeVaoPhieuNhapTest(boolean,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@3c9754d8]" started-at="2023-12-07T14:01:29 ICT" name="themXeVaoPhieuNhapTest" data-provider="dataChiTietPhieuNhap" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SK7143]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[PN2023072100004]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Dữ liệu chưa hợp lệ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themXeVaoPhieuNhapTest -->
        <test-method signature="xoaTest(java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,double,boolean,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@3c9754d8]" started-at="2023-12-07T14:01:29 ICT" name="xoaTest" data-provider="dataXoa" finished-at="2023-12-07T14:01:29 ICT" duration-ms="24" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PN2023120600006]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Thông báo phiếu nhập chưa có trong cơ sở dữ liệu. Vui lòng chọn phiếu nhập khác]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xoaTest -->
        <test-method signature="xoaTest(java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,double,boolean,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@3c9754d8]" started-at="2023-12-07T14:01:29 ICT" name="xoaTest" data-provider="dataXoa" finished-at="2023-12-07T14:01:29 ICT" duration-ms="18" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PN2023081700007]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[SK 1234]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[SM 112]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[900]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Bạn không xác nhận xóa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xoaTest -->
        <test-method signature="xoaTest(java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,double,boolean,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@3c9754d8]" started-at="2023-12-07T14:01:29 ICT" name="xoaTest" data-provider="dataXoa" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PN2023072100005]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[SK 1091]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[SM 4523]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[900]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Bạn không có quyền xóa phiếu nhập]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xoaTest -->
        <test-method signature="xoaTest(java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,double,boolean,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@3c9754d8]" started-at="2023-12-07T14:01:29 ICT" name="xoaTest" data-provider="dataXoa" finished-at="2023-12-07T14:01:29 ICT" duration-ms="21" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PN2023072100003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[SK8054]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[SM7979]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[700]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Xóa thành công]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xoaTest -->
      </class> <!-- com.ttt.TEST.TestPhieuNhap -->
      <class name="com.ttt.TEST.TestPhieuXuat">
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@40005471]" started-at="2023-12-07T14:01:29 ICT" name="checkNullTest" data-provider="checkNullDataProvider" finished-at="2023-12-07T14:01:29 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PXK001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[126]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Vui lòng chọn số khung]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@40005471]" started-at="2023-12-07T14:01:29 ICT" name="checkNullTest" data-provider="checkNullDataProvider" finished-at="2023-12-07T14:01:29 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PX001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PXK001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-124]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Không được nhập âm giá xuất]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@40005471]" started-at="2023-12-07T14:01:29 ICT" name="checkNullTest" data-provider="checkNullDataProvider" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PX001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PXK001]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value>
                <![CDATA[Vui lòng nhập giá xuất]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@40005471]" started-at="2023-12-07T14:01:29 ICT" name="checkNullTest" data-provider="checkNullDataProvider" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PX001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PXK001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[phieuXuat]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Giá nhập sai kiểu dữ liệu]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="lamMoiTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@40005471]" started-at="2023-12-07T14:01:29 ICT" name="lamMoiTest" data-provider="lamMoiTestProvider" finished-at="2023-12-07T14:01:29 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Làm mới thành công]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lamMoiTest -->
        <test-method signature="lamMoiTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@40005471]" started-at="2023-12-07T14:01:29 ICT" name="lamMoiTest" data-provider="lamMoiTestProvider" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PXK123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Làm mới không thành công]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lamMoiTest -->
        <test-method signature="lamMoiTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@40005471]" started-at="2023-12-07T14:01:29 ICT" name="lamMoiTest" data-provider="lamMoiTestProvider" finished-at="2023-12-07T14:01:29 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abcxyz]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Làm mới không thành công]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lamMoiTest -->
        <test-method signature="lamMoiTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@40005471]" started-at="2023-12-07T14:01:29 ICT" name="lamMoiTest" data-provider="lamMoiTestProvider" finished-at="2023-12-07T14:01:29 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[soKhung]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Làm mới không thành công]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lamMoiTest -->
        <test-method signature="lamMoiTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@40005471]" started-at="2023-12-07T14:01:29 ICT" name="lamMoiTest" data-provider="lamMoiTestProvider" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1235]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Làm mới không thành công]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lamMoiTest -->
        <test-method signature="suaPhieuXuat(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@40005471]" started-at="2023-12-07T14:01:29 ICT" name="suaPhieuXuat" data-provider="suaPXKProvider" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PXK001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1212]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Vui lòng chọn số khung]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suaPhieuXuat -->
        <test-method signature="suaPhieuXuat(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@40005471]" started-at="2023-12-07T14:01:29 ICT" name="suaPhieuXuat" data-provider="suaPXKProvider" finished-at="2023-12-07T14:01:29 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[XK123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PX2023081000006]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12333]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Đã xuất xe rồi]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suaPhieuXuat -->
        <test-method signature="suaPhieuXuat(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@40005471]" started-at="2023-12-07T14:01:29 ICT" name="suaPhieuXuat" data-provider="suaPXKProvider" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PX001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PXK001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-124]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Không được nhập âm giá xuất]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suaPhieuXuat -->
        <test-method signature="suaPhieuXuat(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@40005471]" started-at="2023-12-07T14:01:29 ICT" name="suaPhieuXuat" data-provider="suaPXKProvider" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[XK123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1111]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Vui lòng chọn phiếu xuất kho]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suaPhieuXuat -->
        <test-method signature="suaPhieuXuat(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@40005471]" started-at="2023-12-07T14:01:29 ICT" name="suaPhieuXuat" data-provider="suaPXKProvider" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PX001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PXK001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Vui lòng nhập giá xuất]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suaPhieuXuat -->
        <test-method signature="suaPhieuXuat(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@40005471]" started-at="2023-12-07T14:01:29 ICT" name="suaPhieuXuat" data-provider="suaPXKProvider" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[XK123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PKX004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[900]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Giá xuất nhỏ hơn giá nhập, xuất xe lỗ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suaPhieuXuat -->
        <test-method signature="suaPhieuXuat(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@40005471]" started-at="2023-12-07T14:01:29 ICT" name="suaPhieuXuat" data-provider="suaPXKProvider" finished-at="2023-12-07T14:01:29 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PX001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PXK123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sửa thành công]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suaPhieuXuat -->
        <test-method signature="suaPhieuXuat(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@40005471]" started-at="2023-12-07T14:01:29 ICT" name="suaPhieuXuat" data-provider="suaPXKProvider" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PX001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PXK001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[phieuXuat]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Giá nhập sai kiểu dữ liệu]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suaPhieuXuat -->
        <test-method signature="themVaoPhieuXuatTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@40005471]" started-at="2023-12-07T14:01:29 ICT" name="themVaoPhieuXuatTest" data-provider="themPXKProvider" finished-at="2023-12-07T14:01:29 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PXK001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1261.12]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Vui lòng chọn số khung]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themVaoPhieuXuatTest -->
        <test-method signature="themVaoPhieuXuatTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@40005471]" started-at="2023-12-07T14:01:29 ICT" name="themVaoPhieuXuatTest" data-provider="themPXKProvider" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PX001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PXK001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-124]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Không được nhập âm giá xuất]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themVaoPhieuXuatTest -->
        <test-method signature="themVaoPhieuXuatTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@40005471]" started-at="2023-12-07T14:01:29 ICT" name="themVaoPhieuXuatTest" data-provider="themPXKProvider" finished-at="2023-12-07T14:01:29 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[XK123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PXK001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1231]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Phiếu xuất đã tồn tại]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themVaoPhieuXuatTest -->
        <test-method signature="themVaoPhieuXuatTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@40005471]" started-at="2023-12-07T14:01:29 ICT" name="themVaoPhieuXuatTest" data-provider="themPXKProvider" finished-at="2023-12-07T14:01:29 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[XK123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PKX004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[900]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Giá xuất nhỏ hơn giá nhập, xuất xe lỗ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themVaoPhieuXuatTest -->
        <test-method signature="themVaoPhieuXuatTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@40005471]" started-at="2023-12-07T14:01:29 ICT" name="themVaoPhieuXuatTest" data-provider="themPXKProvider" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PX001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PXK001]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value>
                <![CDATA[Vui lòng nhập giá xuất]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themVaoPhieuXuatTest -->
        <test-method signature="themVaoPhieuXuatTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@40005471]" started-at="2023-12-07T14:01:29 ICT" name="themVaoPhieuXuatTest" data-provider="themPXKProvider" finished-at="2023-12-07T14:01:29 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PX001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PXK001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[phieuXuat]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Giá xuất sai kiểu dữ liệu]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themVaoPhieuXuatTest -->
        <test-method signature="themVaoPhieuXuatTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@40005471]" started-at="2023-12-07T14:01:29 ICT" name="themVaoPhieuXuatTest" data-provider="themPXKProvider" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PX001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PXK123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Thêm mới thành công]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themVaoPhieuXuatTest -->
        <test-method signature="xoaPhieuXuat(boolean,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@40005471]" started-at="2023-12-07T14:01:29 ICT" name="xoaPhieuXuat" data-provider="xoaPXKProvider" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SK001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[PX20230722000011]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Thông báo phiếu xuất chưa có trong cơ sở dữ liệu. Vui lòng chọn phiếu xuất khác]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xoaPhieuXuat -->
        <test-method signature="xoaPhieuXuat(boolean,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@40005471]" started-at="2023-12-07T14:01:29 ICT" name="xoaPhieuXuat" data-provider="xoaPXKProvider" finished-at="2023-12-07T14:01:29 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SK001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[PX2023072200001]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Bạn không xác nhận xóa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xoaPhieuXuat -->
        <test-method signature="xoaPhieuXuat(boolean,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@40005471]" started-at="2023-12-07T14:01:29 ICT" name="xoaPhieuXuat" data-provider="xoaPXKProvider" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SK001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[PX2023072200001]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Bạn không có quyền xóa phiếu nhập]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xoaPhieuXuat -->
        <test-method signature="xoaPhieuXuat(boolean,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@40005471]" started-at="2023-12-07T14:01:29 ICT" name="xoaPhieuXuat" data-provider="xoaPXKProvider" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[PX20230722000011]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Có lỗi. Vui lòng kiểm tra lại thông tin!]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Có lỗi. Vui lòng kiểm tra lại thông tin!] but found [Thông báo phiếu xuất chưa có trong cơ sở dữ liệu. Vui lòng chọn phiếu xuất khác]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Có lỗi. Vui lòng kiểm tra lại thông tin!] but found [Thông báo phiếu xuất chưa có trong cơ sở dữ liệu. Vui lòng chọn phiếu xuất khác]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.ttt.TEST.TestPhieuXuat.xoaPhieuXuat(TestPhieuXuat.java:237)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xoaPhieuXuat -->
        <test-method signature="xoaPhieuXuat(boolean,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@40005471]" started-at="2023-12-07T14:01:29 ICT" name="xoaPhieuXuat" data-provider="xoaPXKProvider" finished-at="2023-12-07T14:01:29 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SK001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[PX2023072200001]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Xóa thành công]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xoaPhieuXuat -->
      </class> <!-- com.ttt.TEST.TestPhieuXuat -->
      <class name="com.ttt.TEST.TestNhanVien">
        <test-method signature="UpdateNhanVien(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestNhanVien@55fe41ea]" started-at="2023-12-07T14:01:29 ICT" name="UpdateNhanVien" data-provider="nhanVienDataUpdate" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV2023101500017]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Hồ Trọng Tường]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Hậu Giang]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[tuong@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[01-01-2003]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Vui lòng nhập mật khẩu]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateNhanVien -->
        <test-method signature="UpdateNhanVien(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestNhanVien@55fe41ea]" started-at="2023-12-07T14:01:29 ICT" name="UpdateNhanVien" data-provider="nhanVienDataUpdate" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV2023101500017]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Hồ Trọng Tường]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Hậu Giang]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[tuong@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[01-01-2003]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Mật khẩu không đúng định dạng]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateNhanVien -->
        <test-method signature="UpdateNhanVien(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestNhanVien@55fe41ea]" started-at="2023-12-07T14:01:29 ICT" name="UpdateNhanVien" data-provider="nhanVienDataUpdate" finished-at="2023-12-07T14:01:29 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV2023101500017]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Hậu Giang]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[tuong@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[12345678]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[01-01-2003]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Vui lòng nhập họ tên]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateNhanVien -->
        <test-method signature="UpdateNhanVien(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestNhanVien@55fe41ea]" started-at="2023-12-07T14:01:29 ICT" name="UpdateNhanVien" data-provider="nhanVienDataUpdate" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV2023101500017]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Hồ Trọng Tường]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[tuong@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[12345678]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[01-01-2003]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Vui lòng nhập địa chỉ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateNhanVien -->
        <test-method signature="UpdateNhanVien(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestNhanVien@55fe41ea]" started-at="2023-12-07T14:01:29 ICT" name="UpdateNhanVien" data-provider="nhanVienDataUpdate" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV2023101500017]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Hồ Trọng Tường]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Hậu Giang]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[12345678]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[01-01-2003]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Vui lòng nhập email]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateNhanVien -->
        <test-method signature="UpdateNhanVien(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestNhanVien@55fe41ea]" started-at="2023-12-07T14:01:29 ICT" name="UpdateNhanVien" data-provider="nhanVienDataUpdate" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV2023101500017]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Hồ Trọng Tường]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Hậu Giang]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[tuong@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[12345678]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Vui lòng nhập ngày sinh]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateNhanVien -->
        <test-method signature="XoaNhanVien_ThanhCong(java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestNhanVien@55fe41ea]" started-at="2023-12-07T14:01:29 ICT" name="XoaNhanVien_ThanhCong" data-provider="DeletenhanVienDataProvider" finished-at="2023-12-07T14:01:29 ICT" duration-ms="1" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
[public void com.ttt.TEST.TestNhanVien.XoaNhanVien_ThanhCong(java.lang.String,java.lang.String)] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: XoaNhanVien_ThanhCong([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) NV2023072100002,(java.lang.String) Hồ Trọng Tường,(java.lang.String) Hậu Giang,(java.lang.String) tuong@gmail.com@gmail.com,(java.lang.String) 11111111,(java.lang.String) 1999-01-08,(java.lang.String) Thành công]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
[public void com.ttt.TEST.TestNhanVien.XoaNhanVien_ThanhCong(java.lang.String,java.lang.String)] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: XoaNhanVien_ThanhCong([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) NV2023072100002,(java.lang.String) Hồ Trọng Tường,(java.lang.String) Hậu Giang,(java.lang.String) tuong@gmail.com@gmail.com,(java.lang.String) 11111111,(java.lang.String) 1999-01-08,(java.lang.String) Thành công]
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:43)
at org.testng.internal.Parameters.injectParameters(Parameters.java:914)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:34)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- XoaNhanVien_ThanhCong -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestNhanVien@55fe41ea]" started-at="2023-12-07T14:01:29 ICT" name="checkNullTest" data-provider="ChecknhanVienDataProvider" finished-at="2023-12-07T14:01:29 ICT" duration-ms="1" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
[public void com.ttt.TEST.TestNhanVien.checkNullTest(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: checkNullTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=int, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=4, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=5, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) Nguyễn Thành Trung,(java.lang.String) trung@gmail.com,(java.lang.String) 1999-01-08,(java.lang.String) 11111111,(java.lang.String) 11111111,(java.lang.String) Thành công]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
[public void com.ttt.TEST.TestNhanVien.checkNullTest(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: checkNullTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=int, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=4, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=5, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) Nguyễn Thành Trung,(java.lang.String) trung@gmail.com,(java.lang.String) 1999-01-08,(java.lang.String) 11111111,(java.lang.String) 11111111,(java.lang.String) Thành công]
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:43)
at org.testng.internal.Parameters.injectParameters(Parameters.java:914)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:34)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkTrungMaNV(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestNhanVien@55fe41ea]" started-at="2023-12-07T14:01:29 ICT" name="checkTrungMaNV" data-provider="CheckTrungnhanVienDataProvider" finished-at="2023-12-07T14:01:29 ICT" duration-ms="25" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV2023072100002]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Hồ Trọng Tường]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Hậu Giang]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[tuong@gmail.com@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[11111111]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[1999-01-08]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Trùng mã]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTrungMaNV -->
        <test-method signature="checkTrungMaNV(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestNhanVien@55fe41ea]" started-at="2023-12-07T14:01:29 ICT" name="checkTrungMaNV" data-provider="CheckTrungnhanVienDataProvider" finished-at="2023-12-07T14:01:29 ICT" duration-ms="23" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV20230ss100003]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Đỗ Tấn Tài]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Hậu Giang]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[tai@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[11111111]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[1999-01-08]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Không trùng]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTrungMaNV -->
        <test-method signature="deleteTest(java.lang.String)[pri:0, instance:com.ttt.TEST.TestNhanVien@55fe41ea]" started-at="2023-12-07T14:01:29 ICT" name="deleteTest" data-provider="DeletenhanVienDataProvider" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
[public void com.ttt.TEST.TestNhanVien.deleteTest(java.lang.String)] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: deleteTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) NV2023072100002,(java.lang.String) Hồ Trọng Tường,(java.lang.String) Hậu Giang,(java.lang.String) tuong@gmail.com@gmail.com,(java.lang.String) 11111111,(java.lang.String) 1999-01-08,(java.lang.String) Thành công]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
[public void com.ttt.TEST.TestNhanVien.deleteTest(java.lang.String)] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: deleteTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) NV2023072100002,(java.lang.String) Hồ Trọng Tường,(java.lang.String) Hậu Giang,(java.lang.String) tuong@gmail.com@gmail.com,(java.lang.String) 11111111,(java.lang.String) 1999-01-08,(java.lang.String) Thành công]
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:43)
at org.testng.internal.Parameters.injectParameters(Parameters.java:914)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:34)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTest -->
        <test-method signature="themnvPass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestNhanVien@55fe41ea]" started-at="2023-12-07T14:01:29 ICT" name="themnvPass" data-provider="nhanVienData" finished-at="2023-12-07T14:01:29 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV2023101500017]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Hồ Trọng Tường]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Hậu Giang]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[tuong@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[12345678]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[01-01-2003]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Thành công]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themnvPass -->
        <test-method signature="themnvPass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestNhanVien@55fe41ea]" started-at="2023-12-07T14:01:29 ICT" name="themnvPass" data-provider="nhanVienData" finished-at="2023-12-07T14:01:29 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV2023072100003]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Đỗ Tấn Tài]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Hậu Giang]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[tai@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[01-01-2003]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Mật khẩu không đúng định dạng]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themnvPass -->
        <test-method signature="themnvPass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestNhanVien@55fe41ea]" started-at="2023-12-07T14:01:29 ICT" name="themnvPass" data-provider="nhanVienData" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV2023072100003]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Đỗ Tấn Tài]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Hậu Giang]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[tai@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[11111111]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[01-01-2003]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Thành công]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themnvPass -->
        <test-method signature="themnvPass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestNhanVien@55fe41ea]" started-at="2023-12-07T14:01:29 ICT" name="themnvPass" data-provider="nhanVienData" finished-at="2023-12-07T14:01:29 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV2023072100005]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Đỗ tấn tài]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Hậu Giang]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[tai@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[11231222]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[01-01-2003]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Thành công]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themnvPass -->
        <test-method signature="themnvPass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestNhanVien@55fe41ea]" started-at="2023-12-07T14:01:29 ICT" name="themnvPass" data-provider="nhanVienData" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV2023101500017]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Hậu Giang]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[tuong@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[12345678]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[01-01-2003]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Vui lòng nhập họ tên]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themnvPass -->
        <test-method signature="themnvPass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestNhanVien@55fe41ea]" started-at="2023-12-07T14:01:29 ICT" name="themnvPass" data-provider="nhanVienData" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV2023101500017]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Hồ Trọng Tường]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[tuong@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[12345678]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[01-01-2003]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Vui lòng nhập địa chỉ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themnvPass -->
        <test-method signature="themnvPass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestNhanVien@55fe41ea]" started-at="2023-12-07T14:01:29 ICT" name="themnvPass" data-provider="nhanVienData" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV2023101500017]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Hồ Trọng Tường]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Hậu Giang]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[12345678]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[01-01-2003]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Vui lòng nhập email]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themnvPass -->
        <test-method signature="themnvPass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestNhanVien@55fe41ea]" started-at="2023-12-07T14:01:29 ICT" name="themnvPass" data-provider="nhanVienData" finished-at="2023-12-07T14:01:29 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV2023101500017]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Hồ Trọng Tường]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Hậu Giang]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[tuong@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[12345678]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Vui lòng nhập ngày sinh]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themnvPass -->
      </class> <!-- com.ttt.TEST.TestNhanVien -->
      <class name="com.ttt.TEST.TestDangNhap">
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDangNhap@2cd76f31]" started-at="2023-12-07T14:01:29 ICT" name="loginTest" data-provider="dataLogin" finished-at="2023-12-07T14:01:29 ICT" duration-ms="30" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Vui lòng nhập mã nhân viên]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Vui lòng nhập mã nhân viên] but found [Sai tên đăng nhập]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Vui lòng nhập mã nhân viên] but found [Sai tên đăng nhập]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.ttt.TEST.TestDangNhap.loginTest(TestDangNhap.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDangNhap@2cd76f31]" started-at="2023-12-07T14:01:29 ICT" name="loginTest" data-provider="dataLogin" finished-at="2023-12-07T14:01:29 ICT" duration-ms="24" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PC05132]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Sai tên đăng nhập]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDangNhap@2cd76f31]" started-at="2023-12-07T14:01:29 ICT" name="loginTest" data-provider="dataLogin" finished-at="2023-12-07T14:01:29 ICT" duration-ms="27" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV2023072100001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Vui lòng nhập mật khẩu]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Vui lòng nhập mật khẩu] but found [Sai mật khẩu]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Vui lòng nhập mật khẩu] but found [Sai mật khẩu]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.ttt.TEST.TestDangNhap.loginTest(TestDangNhap.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDangNhap@2cd76f31]" started-at="2023-12-07T14:01:29 ICT" name="loginTest" data-provider="dataLogin" finished-at="2023-12-07T14:01:29 ICT" duration-ms="22" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV2023072100001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[saimk]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Sai mật khẩu]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDangNhap@2cd76f31]" started-at="2023-12-07T14:01:29 ICT" name="loginTest" data-provider="dataLogin" finished-at="2023-12-07T14:01:29 ICT" duration-ms="20" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[PC05132]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[saimk]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Đăng nhập sai tài khoản]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Đăng nhập sai tài khoản] but found [Sai tên đăng nhập]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Đăng nhập sai tài khoản] but found [Sai tên đăng nhập]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.ttt.TEST.TestDangNhap.loginTest(TestDangNhap.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDangNhap@2cd76f31]" started-at="2023-12-07T14:01:29 ICT" name="loginTest" data-provider="dataLogin" finished-at="2023-12-07T14:01:29 ICT" duration-ms="20" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV2023072100001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Hiển thị giao diện làm việc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
      </class> <!-- com.ttt.TEST.TestDangNhap -->
      <class name="com.ttt.TEST.TestDoiMatKhau">
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDoiMatKhau@367ffa75]" started-at="2023-12-07T14:01:29 ICT" name="checkNullTest" data-provider="dataCheck" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Vui lòng nhập đầy đủ thông tin]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Vui lòng nhập đầy đủ thông tin] but found [Thông tin đăng nhập không đúng]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Vui lòng nhập đầy đủ thông tin] but found [Thông tin đăng nhập không đúng]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.ttt.TEST.TestDoiMatKhau.checkNullTest(TestDoiMatKhau.java:93)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDoiMatKhau@367ffa75]" started-at="2023-12-07T14:01:29 ICT" name="checkNullTest" data-provider="dataCheck" finished-at="2023-12-07T14:01:29 ICT" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mk134567]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mk43128]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Vui lòng nhập đầy đủ thông tin]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Vui lòng nhập đầy đủ thông tin] but found [Thông tin nhập chưa đúng]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Vui lòng nhập đầy đủ thông tin] but found [Thông tin nhập chưa đúng]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.ttt.TEST.TestDoiMatKhau.checkNullTest(TestDoiMatKhau.java:93)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDoiMatKhau@367ffa75]" started-at="2023-12-07T14:01:29 ICT" name="checkNullTest" data-provider="dataCheck" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[matkhau]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[matkhaumoi]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Vui lòng nhập đầy đủ thông tin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDoiMatKhau@367ffa75]" started-at="2023-12-07T14:01:29 ICT" name="checkNullTest" data-provider="dataCheck" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV20230713]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mkxn112233]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Chưa nhập đủ thông tin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDoiMatKhau@367ffa75]" started-at="2023-12-07T14:01:29 ICT" name="checkNullTest" data-provider="dataCheck" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV20230715]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mk32]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mk332211]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Chưa nhập đủ thông tin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDoiMatKhau@367ffa75]" started-at="2023-12-07T14:01:29 ICT" name="checkNullTest" data-provider="dataCheck" finished-at="2023-12-07T14:01:29 ICT" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV20230718]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[nv1234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mk56]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mk65]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Thông tin nhập chưa đúng]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Thông tin nhập chưa đúng] but found [Chưa nhập đủ thông tin]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Thông tin nhập chưa đúng] but found [Chưa nhập đủ thông tin]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.ttt.TEST.TestDoiMatKhau.checkNullTest(TestDoiMatKhau.java:93)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDoiMatKhau@367ffa75]" started-at="2023-12-07T14:01:29 ICT" name="checkNullTest" data-provider="dataCheck" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV20230719]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[nv1234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mkxn]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Chưa nhập đủ thông tin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDoiMatKhau@367ffa75]" started-at="2023-12-07T14:01:29 ICT" name="checkNullTest" data-provider="dataCheck" finished-at="2023-12-07T14:01:29 ICT" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV20230710]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[nv1234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mk7891230]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Chưa nhập đủ thông tin]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Chưa nhập đủ thông tin] but found [Thông tin nhập chưa đúng]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Chưa nhập đủ thông tin] but found [Thông tin nhập chưa đúng]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.ttt.TEST.TestDoiMatKhau.checkNullTest(TestDoiMatKhau.java:93)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDoiMatKhau@367ffa75]" started-at="2023-12-07T14:01:29 ICT" name="checkNullTest" data-provider="dataCheck" finished-at="2023-12-07T14:01:29 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV20230710]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[nv1234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mk7891230]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mk123450]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Thông tin nhập chưa đúng]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDoiMatKhau@367ffa75]" started-at="2023-12-07T14:01:29 ICT" name="checkNullTest" data-provider="dataCheck" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV20230712]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[nv12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mk7891230]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mk123450]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Thông tin nhập chưa đúng]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDoiMatKhau@367ffa75]" started-at="2023-12-07T14:01:29 ICT" name="checkNullTest" data-provider="dataCheck" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV20230717]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[nv123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mk7891230]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mk7891230]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Thông tin đăng nhập không đúng]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDoiMatKhau@367ffa75]" started-at="2023-12-07T14:01:29 ICT" name="checkNullTest" data-provider="dataCheck" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV20230712]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[nv1234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mk7891230]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mk789123000]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Xác nhận mật khẩu không đúng]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDoiMatKhau@367ffa75]" started-at="2023-12-07T14:01:29 ICT" name="checkNullTest" data-provider="dataCheck" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV20230712]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[nv1234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mk789]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mk789]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Mật khẩu phải có ít nhất 8 ký tự]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDoiMatKhau@367ffa75]" started-at="2023-12-07T14:01:29 ICT" name="checkNullTest" data-provider="dataCheck" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV20230712]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[nv1234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mk7891230]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Vui lòng nhập mật khẩu mới]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Vui lòng nhập mật khẩu mới] but found [Xác nhận mật khẩu không đúng]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Vui lòng nhập mật khẩu mới] but found [Xác nhận mật khẩu không đúng]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.ttt.TEST.TestDoiMatKhau.checkNullTest(TestDoiMatKhau.java:93)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDoiMatKhau@367ffa75]" started-at="2023-12-07T14:01:29 ICT" name="checkNullTest" data-provider="dataCheck" finished-at="2023-12-07T14:01:29 ICT" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV20230712]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mk7891230]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mk7891230]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Vui lòng nhập mật khẩu hiện tại]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Vui lòng nhập mật khẩu hiện tại] but found [Thông tin đăng nhập không đúng]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Vui lòng nhập mật khẩu hiện tại] but found [Thông tin đăng nhập không đúng]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.ttt.TEST.TestDoiMatKhau.checkNullTest(TestDoiMatKhau.java:93)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDoiMatKhau@367ffa75]" started-at="2023-12-07T14:01:29 ICT" name="checkNullTest" data-provider="dataCheck" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV20230712]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[matkhau]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mk7891230]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mk7891230]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Vui lòng nhập mật khẩu hiện tại]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Vui lòng nhập mật khẩu hiện tại] but found [Thông tin đăng nhập không đúng]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Vui lòng nhập mật khẩu hiện tại] but found [Thông tin đăng nhập không đúng]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.ttt.TEST.TestDoiMatKhau.checkNullTest(TestDoiMatKhau.java:93)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDoiMatKhau@367ffa75]" started-at="2023-12-07T14:01:29 ICT" name="checkNullTest" data-provider="dataCheck" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[nv1234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mk7891230]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mk7891230]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Vui lòng nhập mã nhân viên]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Vui lòng nhập mã nhân viên] but found [Thông tin đăng nhập không đúng]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Vui lòng nhập mã nhân viên] but found [Thông tin đăng nhập không đúng]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.ttt.TEST.TestDoiMatKhau.checkNullTest(TestDoiMatKhau.java:93)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDoiMatKhau@367ffa75]" started-at="2023-12-07T14:01:29 ICT" name="checkNullTest" data-provider="dataCheck" finished-at="2023-12-07T14:01:29 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV20230712]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[nv1234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mk7891230]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mk7891230]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Đổi mật khẩu thành công]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
      </class> <!-- com.ttt.TEST.TestDoiMatKhau -->
    </test> <!-- main-suite-test1 -->
  </suite> <!-- SuiteHiNo -->
  <suite started-at="2023-12-07T14:01:28 ICT" name="SuiteDangNhap" finished-at="2023-12-07T14:01:28 ICT" duration-ms="176">
    <groups>
    </groups>
    <test started-at="2023-12-07T14:01:28 ICT" name="TestDangNhap" finished-at="2023-12-07T14:01:28 ICT" duration-ms="176">
      <class name="com.ttt.TEST.TestDangNhap">
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDangNhap@2e377400]" started-at="2023-12-07T14:01:28 ICT" name="loginTest" data-provider="dataLogin" finished-at="2023-12-07T14:01:28 ICT" duration-ms="30" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Vui lòng nhập mã nhân viên]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Vui lòng nhập mã nhân viên] but found [Sai tên đăng nhập]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Vui lòng nhập mã nhân viên] but found [Sai tên đăng nhập]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.ttt.TEST.TestDangNhap.loginTest(TestDangNhap.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1207)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDangNhap@2e377400]" started-at="2023-12-07T14:01:28 ICT" name="loginTest" data-provider="dataLogin" finished-at="2023-12-07T14:01:28 ICT" duration-ms="31" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PC05132]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Sai tên đăng nhập]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDangNhap@2e377400]" started-at="2023-12-07T14:01:28 ICT" name="loginTest" data-provider="dataLogin" finished-at="2023-12-07T14:01:28 ICT" duration-ms="39" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV2023072100001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Vui lòng nhập mật khẩu]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Vui lòng nhập mật khẩu] but found [Sai mật khẩu]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Vui lòng nhập mật khẩu] but found [Sai mật khẩu]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.ttt.TEST.TestDangNhap.loginTest(TestDangNhap.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1207)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDangNhap@2e377400]" started-at="2023-12-07T14:01:28 ICT" name="loginTest" data-provider="dataLogin" finished-at="2023-12-07T14:01:28 ICT" duration-ms="26" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV2023072100001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[saimk]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Sai mật khẩu]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDangNhap@2e377400]" started-at="2023-12-07T14:01:28 ICT" name="loginTest" data-provider="dataLogin" finished-at="2023-12-07T14:01:28 ICT" duration-ms="19" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[PC05132]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[saimk]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Đăng nhập sai tài khoản]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Đăng nhập sai tài khoản] but found [Sai tên đăng nhập]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Đăng nhập sai tài khoản] but found [Sai tên đăng nhập]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.ttt.TEST.TestDangNhap.loginTest(TestDangNhap.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1207)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDangNhap@2e377400]" started-at="2023-12-07T14:01:28 ICT" name="loginTest" data-provider="dataLogin" finished-at="2023-12-07T14:01:28 ICT" duration-ms="24" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV2023072100001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Hiển thị giao diện làm việc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
      </class> <!-- com.ttt.TEST.TestDangNhap -->
    </test> <!-- TestDangNhap -->
  </suite> <!-- SuiteDangNhap -->
  <suite started-at="2023-12-07T14:01:28 ICT" name="SuiteDoiMatKhau" finished-at="2023-12-07T14:01:28 ICT" duration-ms="30">
    <groups>
    </groups>
    <test started-at="2023-12-07T14:01:28 ICT" name="TestDoiMatKhau" finished-at="2023-12-07T14:01:28 ICT" duration-ms="30">
      <class name="com.ttt.TEST.TestDoiMatKhau">
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDoiMatKhau@757277dc]" started-at="2023-12-07T14:01:28 ICT" name="checkNullTest" data-provider="dataCheck" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Vui lòng nhập đầy đủ thông tin]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Vui lòng nhập đầy đủ thông tin] but found [Thông tin đăng nhập không đúng]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Vui lòng nhập đầy đủ thông tin] but found [Thông tin đăng nhập không đúng]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.ttt.TEST.TestDoiMatKhau.checkNullTest(TestDoiMatKhau.java:93)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1207)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDoiMatKhau@757277dc]" started-at="2023-12-07T14:01:28 ICT" name="checkNullTest" data-provider="dataCheck" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[matkhau]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[matkhaumoi]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Vui lòng nhập đầy đủ thông tin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDoiMatKhau@757277dc]" started-at="2023-12-07T14:01:28 ICT" name="checkNullTest" data-provider="dataCheck" finished-at="2023-12-07T14:01:28 ICT" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mk134567]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mk43128]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Vui lòng nhập đầy đủ thông tin]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Vui lòng nhập đầy đủ thông tin] but found [Thông tin nhập chưa đúng]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Vui lòng nhập đầy đủ thông tin] but found [Thông tin nhập chưa đúng]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.ttt.TEST.TestDoiMatKhau.checkNullTest(TestDoiMatKhau.java:93)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1207)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDoiMatKhau@757277dc]" started-at="2023-12-07T14:01:28 ICT" name="checkNullTest" data-provider="dataCheck" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV20230713]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mkxn112233]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Chưa nhập đủ thông tin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDoiMatKhau@757277dc]" started-at="2023-12-07T14:01:28 ICT" name="checkNullTest" data-provider="dataCheck" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV20230715]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mk32]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mk332211]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Chưa nhập đủ thông tin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDoiMatKhau@757277dc]" started-at="2023-12-07T14:01:28 ICT" name="checkNullTest" data-provider="dataCheck" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV20230719]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[nv1234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mkxn]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Chưa nhập đủ thông tin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDoiMatKhau@757277dc]" started-at="2023-12-07T14:01:28 ICT" name="checkNullTest" data-provider="dataCheck" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV20230718]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[nv1234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mk56]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mk65]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Thông tin nhập chưa đúng]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Thông tin nhập chưa đúng] but found [Chưa nhập đủ thông tin]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Thông tin nhập chưa đúng] but found [Chưa nhập đủ thông tin]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.ttt.TEST.TestDoiMatKhau.checkNullTest(TestDoiMatKhau.java:93)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1207)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDoiMatKhau@757277dc]" started-at="2023-12-07T14:01:28 ICT" name="checkNullTest" data-provider="dataCheck" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV20230710]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[nv1234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mk7891230]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Chưa nhập đủ thông tin]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Chưa nhập đủ thông tin] but found [Thông tin nhập chưa đúng]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Chưa nhập đủ thông tin] but found [Thông tin nhập chưa đúng]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.ttt.TEST.TestDoiMatKhau.checkNullTest(TestDoiMatKhau.java:93)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1207)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDoiMatKhau@757277dc]" started-at="2023-12-07T14:01:28 ICT" name="checkNullTest" data-provider="dataCheck" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV20230710]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[nv1234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mk7891230]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mk123450]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Thông tin nhập chưa đúng]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDoiMatKhau@757277dc]" started-at="2023-12-07T14:01:28 ICT" name="checkNullTest" data-provider="dataCheck" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV20230712]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[nv12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mk7891230]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mk123450]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Thông tin nhập chưa đúng]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDoiMatKhau@757277dc]" started-at="2023-12-07T14:01:28 ICT" name="checkNullTest" data-provider="dataCheck" finished-at="2023-12-07T14:01:28 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV20230717]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[nv123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mk7891230]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mk7891230]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Thông tin đăng nhập không đúng]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDoiMatKhau@757277dc]" started-at="2023-12-07T14:01:28 ICT" name="checkNullTest" data-provider="dataCheck" finished-at="2023-12-07T14:01:28 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV20230712]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[nv1234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mk7891230]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mk789123000]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Xác nhận mật khẩu không đúng]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDoiMatKhau@757277dc]" started-at="2023-12-07T14:01:28 ICT" name="checkNullTest" data-provider="dataCheck" finished-at="2023-12-07T14:01:28 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV20230712]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[nv1234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mk789]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mk789]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Mật khẩu phải có ít nhất 8 ký tự]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDoiMatKhau@757277dc]" started-at="2023-12-07T14:01:28 ICT" name="checkNullTest" data-provider="dataCheck" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV20230712]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[nv1234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mk7891230]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Vui lòng nhập mật khẩu mới]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Vui lòng nhập mật khẩu mới] but found [Xác nhận mật khẩu không đúng]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Vui lòng nhập mật khẩu mới] but found [Xác nhận mật khẩu không đúng]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.ttt.TEST.TestDoiMatKhau.checkNullTest(TestDoiMatKhau.java:93)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1207)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDoiMatKhau@757277dc]" started-at="2023-12-07T14:01:28 ICT" name="checkNullTest" data-provider="dataCheck" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV20230712]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mk7891230]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mk7891230]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Vui lòng nhập mật khẩu hiện tại]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Vui lòng nhập mật khẩu hiện tại] but found [Thông tin đăng nhập không đúng]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Vui lòng nhập mật khẩu hiện tại] but found [Thông tin đăng nhập không đúng]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.ttt.TEST.TestDoiMatKhau.checkNullTest(TestDoiMatKhau.java:93)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1207)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDoiMatKhau@757277dc]" started-at="2023-12-07T14:01:28 ICT" name="checkNullTest" data-provider="dataCheck" finished-at="2023-12-07T14:01:28 ICT" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV20230712]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[matkhau]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mk7891230]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mk7891230]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Vui lòng nhập mật khẩu hiện tại]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Vui lòng nhập mật khẩu hiện tại] but found [Thông tin đăng nhập không đúng]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Vui lòng nhập mật khẩu hiện tại] but found [Thông tin đăng nhập không đúng]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.ttt.TEST.TestDoiMatKhau.checkNullTest(TestDoiMatKhau.java:93)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1207)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDoiMatKhau@757277dc]" started-at="2023-12-07T14:01:28 ICT" name="checkNullTest" data-provider="dataCheck" finished-at="2023-12-07T14:01:28 ICT" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[nv1234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mk7891230]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mk7891230]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Vui lòng nhập mã nhân viên]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Vui lòng nhập mã nhân viên] but found [Thông tin đăng nhập không đúng]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Vui lòng nhập mã nhân viên] but found [Thông tin đăng nhập không đúng]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.ttt.TEST.TestDoiMatKhau.checkNullTest(TestDoiMatKhau.java:93)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1207)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestDoiMatKhau@757277dc]" started-at="2023-12-07T14:01:28 ICT" name="checkNullTest" data-provider="dataCheck" finished-at="2023-12-07T14:01:28 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV20230712]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[nv1234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[mk7891230]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mk7891230]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Đổi mật khẩu thành công]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
      </class> <!-- com.ttt.TEST.TestDoiMatKhau -->
    </test> <!-- TestDoiMatKhau -->
  </suite> <!-- SuiteDoiMatKhau -->
  <suite started-at="2023-12-07T14:01:28 ICT" name="SuitePhieuXuat" finished-at="2023-12-07T14:01:28 ICT" duration-ms="64">
    <groups>
    </groups>
    <test started-at="2023-12-07T14:01:28 ICT" name="TestPhieuXuat" finished-at="2023-12-07T14:01:28 ICT" duration-ms="64">
      <class name="com.ttt.TEST.TestPhieuXuat">
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@1e178745]" started-at="2023-12-07T14:01:28 ICT" name="checkNullTest" data-provider="checkNullDataProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PXK001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[126]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Vui lòng chọn số khung]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@1e178745]" started-at="2023-12-07T14:01:28 ICT" name="checkNullTest" data-provider="checkNullDataProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PX001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PXK001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-124]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Không được nhập âm giá xuất]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@1e178745]" started-at="2023-12-07T14:01:28 ICT" name="checkNullTest" data-provider="checkNullDataProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PX001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PXK001]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value>
                <![CDATA[Vui lòng nhập giá xuất]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@1e178745]" started-at="2023-12-07T14:01:28 ICT" name="checkNullTest" data-provider="checkNullDataProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PX001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PXK001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[phieuXuat]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Giá nhập sai kiểu dữ liệu]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="lamMoiTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@1e178745]" started-at="2023-12-07T14:01:28 ICT" name="lamMoiTest" data-provider="lamMoiTestProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Làm mới thành công]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lamMoiTest -->
        <test-method signature="lamMoiTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@1e178745]" started-at="2023-12-07T14:01:28 ICT" name="lamMoiTest" data-provider="lamMoiTestProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PXK123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Làm mới không thành công]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lamMoiTest -->
        <test-method signature="lamMoiTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@1e178745]" started-at="2023-12-07T14:01:28 ICT" name="lamMoiTest" data-provider="lamMoiTestProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abcxyz]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Làm mới không thành công]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lamMoiTest -->
        <test-method signature="lamMoiTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@1e178745]" started-at="2023-12-07T14:01:28 ICT" name="lamMoiTest" data-provider="lamMoiTestProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1235]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Làm mới không thành công]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lamMoiTest -->
        <test-method signature="lamMoiTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@1e178745]" started-at="2023-12-07T14:01:28 ICT" name="lamMoiTest" data-provider="lamMoiTestProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[soKhung]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Làm mới không thành công]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lamMoiTest -->
        <test-method signature="suaPhieuXuat(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@1e178745]" started-at="2023-12-07T14:01:28 ICT" name="suaPhieuXuat" data-provider="suaPXKProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PXK001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1212]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Vui lòng chọn số khung]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suaPhieuXuat -->
        <test-method signature="suaPhieuXuat(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@1e178745]" started-at="2023-12-07T14:01:28 ICT" name="suaPhieuXuat" data-provider="suaPXKProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PX001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PXK001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-124]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Không được nhập âm giá xuất]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suaPhieuXuat -->
        <test-method signature="suaPhieuXuat(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@1e178745]" started-at="2023-12-07T14:01:28 ICT" name="suaPhieuXuat" data-provider="suaPXKProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[XK123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PX2023081000006]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12333]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Đã xuất xe rồi]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suaPhieuXuat -->
        <test-method signature="suaPhieuXuat(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@1e178745]" started-at="2023-12-07T14:01:28 ICT" name="suaPhieuXuat" data-provider="suaPXKProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[XK123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1111]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Vui lòng chọn phiếu xuất kho]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suaPhieuXuat -->
        <test-method signature="suaPhieuXuat(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@1e178745]" started-at="2023-12-07T14:01:28 ICT" name="suaPhieuXuat" data-provider="suaPXKProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[XK123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PKX004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[900]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Giá xuất nhỏ hơn giá nhập, xuất xe lỗ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suaPhieuXuat -->
        <test-method signature="suaPhieuXuat(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@1e178745]" started-at="2023-12-07T14:01:28 ICT" name="suaPhieuXuat" data-provider="suaPXKProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PX001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PXK001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Vui lòng nhập giá xuất]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suaPhieuXuat -->
        <test-method signature="suaPhieuXuat(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@1e178745]" started-at="2023-12-07T14:01:28 ICT" name="suaPhieuXuat" data-provider="suaPXKProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PX001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PXK001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[phieuXuat]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Giá nhập sai kiểu dữ liệu]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suaPhieuXuat -->
        <test-method signature="suaPhieuXuat(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@1e178745]" started-at="2023-12-07T14:01:28 ICT" name="suaPhieuXuat" data-provider="suaPXKProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PX001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PXK123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sửa thành công]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suaPhieuXuat -->
        <test-method signature="themVaoPhieuXuatTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@1e178745]" started-at="2023-12-07T14:01:28 ICT" name="themVaoPhieuXuatTest" data-provider="themPXKProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PXK001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1261.12]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Vui lòng chọn số khung]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themVaoPhieuXuatTest -->
        <test-method signature="themVaoPhieuXuatTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@1e178745]" started-at="2023-12-07T14:01:28 ICT" name="themVaoPhieuXuatTest" data-provider="themPXKProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PX001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PXK001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-124]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Không được nhập âm giá xuất]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themVaoPhieuXuatTest -->
        <test-method signature="themVaoPhieuXuatTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@1e178745]" started-at="2023-12-07T14:01:28 ICT" name="themVaoPhieuXuatTest" data-provider="themPXKProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[XK123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PXK001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1231]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Phiếu xuất đã tồn tại]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themVaoPhieuXuatTest -->
        <test-method signature="themVaoPhieuXuatTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@1e178745]" started-at="2023-12-07T14:01:28 ICT" name="themVaoPhieuXuatTest" data-provider="themPXKProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[XK123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PKX004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[900]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Giá xuất nhỏ hơn giá nhập, xuất xe lỗ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themVaoPhieuXuatTest -->
        <test-method signature="themVaoPhieuXuatTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@1e178745]" started-at="2023-12-07T14:01:28 ICT" name="themVaoPhieuXuatTest" data-provider="themPXKProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PX001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PXK001]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value>
                <![CDATA[Vui lòng nhập giá xuất]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themVaoPhieuXuatTest -->
        <test-method signature="themVaoPhieuXuatTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@1e178745]" started-at="2023-12-07T14:01:28 ICT" name="themVaoPhieuXuatTest" data-provider="themPXKProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PX001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PXK001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[phieuXuat]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Giá xuất sai kiểu dữ liệu]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themVaoPhieuXuatTest -->
        <test-method signature="themVaoPhieuXuatTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@1e178745]" started-at="2023-12-07T14:01:28 ICT" name="themVaoPhieuXuatTest" data-provider="themPXKProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PX001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PXK123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Thêm mới thành công]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themVaoPhieuXuatTest -->
        <test-method signature="xoaPhieuXuat(boolean,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@1e178745]" started-at="2023-12-07T14:01:28 ICT" name="xoaPhieuXuat" data-provider="xoaPXKProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SK001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[PX20230722000011]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Thông báo phiếu xuất chưa có trong cơ sở dữ liệu. Vui lòng chọn phiếu xuất khác]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xoaPhieuXuat -->
        <test-method signature="xoaPhieuXuat(boolean,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@1e178745]" started-at="2023-12-07T14:01:28 ICT" name="xoaPhieuXuat" data-provider="xoaPXKProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SK001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[PX2023072200001]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Bạn không xác nhận xóa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xoaPhieuXuat -->
        <test-method signature="xoaPhieuXuat(boolean,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@1e178745]" started-at="2023-12-07T14:01:28 ICT" name="xoaPhieuXuat" data-provider="xoaPXKProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SK001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[PX2023072200001]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Bạn không có quyền xóa phiếu nhập]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xoaPhieuXuat -->
        <test-method signature="xoaPhieuXuat(boolean,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@1e178745]" started-at="2023-12-07T14:01:28 ICT" name="xoaPhieuXuat" data-provider="xoaPXKProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[PX20230722000011]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Có lỗi. Vui lòng kiểm tra lại thông tin!]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Có lỗi. Vui lòng kiểm tra lại thông tin!] but found [Thông báo phiếu xuất chưa có trong cơ sở dữ liệu. Vui lòng chọn phiếu xuất khác]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Có lỗi. Vui lòng kiểm tra lại thông tin!] but found [Thông báo phiếu xuất chưa có trong cơ sở dữ liệu. Vui lòng chọn phiếu xuất khác]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.ttt.TEST.TestPhieuXuat.xoaPhieuXuat(TestPhieuXuat.java:237)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1207)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xoaPhieuXuat -->
        <test-method signature="xoaPhieuXuat(boolean,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuXuat@1e178745]" started-at="2023-12-07T14:01:28 ICT" name="xoaPhieuXuat" data-provider="xoaPXKProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SK001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[PX2023072200001]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Xóa thành công]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xoaPhieuXuat -->
      </class> <!-- com.ttt.TEST.TestPhieuXuat -->
    </test> <!-- TestPhieuXuat -->
  </suite> <!-- SuitePhieuXuat -->
  <suite started-at="2023-12-07T14:01:28 ICT" name="SuiteNhanVien" finished-at="2023-12-07T14:01:28 ICT" duration-ms="105">
    <groups>
    </groups>
    <test started-at="2023-12-07T14:01:28 ICT" name="TestNhanVien" finished-at="2023-12-07T14:01:28 ICT" duration-ms="105">
      <class name="com.ttt.TEST.TestNhanVien">
        <test-method signature="UpdateNhanVien(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestNhanVien@10aa41f2]" started-at="2023-12-07T14:01:28 ICT" name="UpdateNhanVien" data-provider="nhanVienDataUpdate" finished-at="2023-12-07T14:01:28 ICT" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV2023101500017]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Hồ Trọng Tường]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Hậu Giang]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[tuong@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[01-01-2003]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Vui lòng nhập mật khẩu]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateNhanVien -->
        <test-method signature="UpdateNhanVien(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestNhanVien@10aa41f2]" started-at="2023-12-07T14:01:28 ICT" name="UpdateNhanVien" data-provider="nhanVienDataUpdate" finished-at="2023-12-07T14:01:28 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV2023101500017]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Hồ Trọng Tường]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Hậu Giang]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[tuong@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[01-01-2003]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Mật khẩu không đúng định dạng]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateNhanVien -->
        <test-method signature="UpdateNhanVien(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestNhanVien@10aa41f2]" started-at="2023-12-07T14:01:28 ICT" name="UpdateNhanVien" data-provider="nhanVienDataUpdate" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV2023101500017]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Hậu Giang]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[tuong@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[12345678]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[01-01-2003]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Vui lòng nhập họ tên]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateNhanVien -->
        <test-method signature="UpdateNhanVien(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestNhanVien@10aa41f2]" started-at="2023-12-07T14:01:28 ICT" name="UpdateNhanVien" data-provider="nhanVienDataUpdate" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV2023101500017]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Hồ Trọng Tường]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[tuong@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[12345678]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[01-01-2003]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Vui lòng nhập địa chỉ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateNhanVien -->
        <test-method signature="UpdateNhanVien(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestNhanVien@10aa41f2]" started-at="2023-12-07T14:01:28 ICT" name="UpdateNhanVien" data-provider="nhanVienDataUpdate" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV2023101500017]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Hồ Trọng Tường]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Hậu Giang]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[12345678]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[01-01-2003]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Vui lòng nhập email]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateNhanVien -->
        <test-method signature="UpdateNhanVien(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestNhanVien@10aa41f2]" started-at="2023-12-07T14:01:28 ICT" name="UpdateNhanVien" data-provider="nhanVienDataUpdate" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV2023101500017]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Hồ Trọng Tường]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Hậu Giang]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[tuong@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[12345678]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Vui lòng nhập ngày sinh]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateNhanVien -->
        <test-method signature="XoaNhanVien_ThanhCong(java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestNhanVien@10aa41f2]" started-at="2023-12-07T14:01:28 ICT" name="XoaNhanVien_ThanhCong" data-provider="DeletenhanVienDataProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
[public void com.ttt.TEST.TestNhanVien.XoaNhanVien_ThanhCong(java.lang.String,java.lang.String)] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: XoaNhanVien_ThanhCong([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) NV2023072100002,(java.lang.String) Hồ Trọng Tường,(java.lang.String) Hậu Giang,(java.lang.String) tuong@gmail.com@gmail.com,(java.lang.String) 11111111,(java.lang.String) 1999-01-08,(java.lang.String) Thành công]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
[public void com.ttt.TEST.TestNhanVien.XoaNhanVien_ThanhCong(java.lang.String,java.lang.String)] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: XoaNhanVien_ThanhCong([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) NV2023072100002,(java.lang.String) Hồ Trọng Tường,(java.lang.String) Hậu Giang,(java.lang.String) tuong@gmail.com@gmail.com,(java.lang.String) 11111111,(java.lang.String) 1999-01-08,(java.lang.String) Thành công]
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:43)
at org.testng.internal.Parameters.injectParameters(Parameters.java:914)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:34)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1207)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- XoaNhanVien_ThanhCong -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestNhanVien@10aa41f2]" started-at="2023-12-07T14:01:28 ICT" name="checkNullTest" data-provider="ChecknhanVienDataProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
[public void com.ttt.TEST.TestNhanVien.checkNullTest(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: checkNullTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=int, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=4, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=5, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) Nguyễn Thành Trung,(java.lang.String) trung@gmail.com,(java.lang.String) 1999-01-08,(java.lang.String) 11111111,(java.lang.String) 11111111,(java.lang.String) Thành công]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
[public void com.ttt.TEST.TestNhanVien.checkNullTest(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: checkNullTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=int, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=4, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=5, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) Nguyễn Thành Trung,(java.lang.String) trung@gmail.com,(java.lang.String) 1999-01-08,(java.lang.String) 11111111,(java.lang.String) 11111111,(java.lang.String) Thành công]
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:43)
at org.testng.internal.Parameters.injectParameters(Parameters.java:914)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:34)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1207)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkTrungMaNV(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestNhanVien@10aa41f2]" started-at="2023-12-07T14:01:28 ICT" name="checkTrungMaNV" data-provider="CheckTrungnhanVienDataProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="39" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV2023072100002]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Hồ Trọng Tường]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Hậu Giang]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[tuong@gmail.com@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[11111111]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[1999-01-08]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Trùng mã]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTrungMaNV -->
        <test-method signature="checkTrungMaNV(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestNhanVien@10aa41f2]" started-at="2023-12-07T14:01:28 ICT" name="checkTrungMaNV" data-provider="CheckTrungnhanVienDataProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="33" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV20230ss100003]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Đỗ Tấn Tài]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Hậu Giang]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[tai@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[11111111]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[1999-01-08]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Không trùng]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTrungMaNV -->
        <test-method signature="deleteTest(java.lang.String)[pri:0, instance:com.ttt.TEST.TestNhanVien@10aa41f2]" started-at="2023-12-07T14:01:28 ICT" name="deleteTest" data-provider="DeletenhanVienDataProvider" finished-at="2023-12-07T14:01:28 ICT" duration-ms="0" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
[public void com.ttt.TEST.TestNhanVien.deleteTest(java.lang.String)] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: deleteTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) NV2023072100002,(java.lang.String) Hồ Trọng Tường,(java.lang.String) Hậu Giang,(java.lang.String) tuong@gmail.com@gmail.com,(java.lang.String) 11111111,(java.lang.String) 1999-01-08,(java.lang.String) Thành công]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
[public void com.ttt.TEST.TestNhanVien.deleteTest(java.lang.String)] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: deleteTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) NV2023072100002,(java.lang.String) Hồ Trọng Tường,(java.lang.String) Hậu Giang,(java.lang.String) tuong@gmail.com@gmail.com,(java.lang.String) 11111111,(java.lang.String) 1999-01-08,(java.lang.String) Thành công]
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:43)
at org.testng.internal.Parameters.injectParameters(Parameters.java:914)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:34)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1207)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTest -->
        <test-method signature="themnvPass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestNhanVien@10aa41f2]" started-at="2023-12-07T14:01:28 ICT" name="themnvPass" data-provider="nhanVienData" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV2023101500017]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Hồ Trọng Tường]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Hậu Giang]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[tuong@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[12345678]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[01-01-2003]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Thành công]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themnvPass -->
        <test-method signature="themnvPass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestNhanVien@10aa41f2]" started-at="2023-12-07T14:01:28 ICT" name="themnvPass" data-provider="nhanVienData" finished-at="2023-12-07T14:01:28 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV2023072100003]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Đỗ Tấn Tài]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Hậu Giang]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[tai@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[11111111]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[01-01-2003]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Thành công]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themnvPass -->
        <test-method signature="themnvPass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestNhanVien@10aa41f2]" started-at="2023-12-07T14:01:28 ICT" name="themnvPass" data-provider="nhanVienData" finished-at="2023-12-07T14:01:28 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV2023072100003]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Đỗ Tấn Tài]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Hậu Giang]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[tai@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[01-01-2003]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Mật khẩu không đúng định dạng]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themnvPass -->
        <test-method signature="themnvPass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestNhanVien@10aa41f2]" started-at="2023-12-07T14:01:28 ICT" name="themnvPass" data-provider="nhanVienData" finished-at="2023-12-07T14:01:28 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV2023072100005]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Đỗ tấn tài]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Hậu Giang]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[tai@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[11231222]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[01-01-2003]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Thành công]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themnvPass -->
        <test-method signature="themnvPass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestNhanVien@10aa41f2]" started-at="2023-12-07T14:01:28 ICT" name="themnvPass" data-provider="nhanVienData" finished-at="2023-12-07T14:01:28 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV2023101500017]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Hồ Trọng Tường]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[tuong@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[12345678]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[01-01-2003]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Vui lòng nhập địa chỉ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themnvPass -->
        <test-method signature="themnvPass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestNhanVien@10aa41f2]" started-at="2023-12-07T14:01:28 ICT" name="themnvPass" data-provider="nhanVienData" finished-at="2023-12-07T14:01:28 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV2023101500017]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Hậu Giang]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[tuong@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[12345678]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[01-01-2003]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Vui lòng nhập họ tên]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themnvPass -->
        <test-method signature="themnvPass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestNhanVien@10aa41f2]" started-at="2023-12-07T14:01:28 ICT" name="themnvPass" data-provider="nhanVienData" finished-at="2023-12-07T14:01:28 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV2023101500017]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Hồ Trọng Tường]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Hậu Giang]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[12345678]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[01-01-2003]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Vui lòng nhập email]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themnvPass -->
        <test-method signature="themnvPass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestNhanVien@10aa41f2]" started-at="2023-12-07T14:01:28 ICT" name="themnvPass" data-provider="nhanVienData" finished-at="2023-12-07T14:01:28 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NV2023101500017]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Hồ Trọng Tường]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Hậu Giang]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[tuong@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[12345678]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Vui lòng nhập ngày sinh]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themnvPass -->
      </class> <!-- com.ttt.TEST.TestNhanVien -->
    </test> <!-- TestNhanVien -->
  </suite> <!-- SuiteNhanVien -->
  <suite started-at="2023-12-07T14:01:26 ICT" name="SuitePhieuNhap" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1716">
    <groups>
    </groups>
    <test started-at="2023-12-07T14:01:26 ICT" name="TestPhieuNhap" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1716">
      <class name="com.ttt.TEST.TestPhieuNhap">
        <test-method signature="checkExistSoKhungTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@5b94b04d]" started-at="2023-12-07T14:01:26 ICT" name="checkExistSoKhungTest" data-provider="dataCheckSK" finished-at="2023-12-07T14:01:27 ICT" duration-ms="464" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
[public void com.ttt.TEST.TestPhieuNhap.checkExistSoKhungTest(java.lang.String,java.lang.String,java.lang.String)] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: checkExistSoKhungTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) SK 3377,(java.lang.String) PX2023072800004,(java.lang.Boolean) false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
[public void com.ttt.TEST.TestPhieuNhap.checkExistSoKhungTest(java.lang.String,java.lang.String,java.lang.String)] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: checkExistSoKhungTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) SK 3377,(java.lang.String) PX2023072800004,(java.lang.Boolean) false]
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:43)
at org.testng.internal.Parameters.injectParameters(Parameters.java:914)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:34)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1207)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkExistSoKhungTest -->
        <test-method signature="checkExistSoKhungTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@5b94b04d]" started-at="2023-12-07T14:01:26 ICT" name="checkExistSoKhungTest" data-provider="dataCheckSK" finished-at="2023-12-07T14:01:27 ICT" duration-ms="451" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[SK 788]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PN2023072100001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Đã tồn tại số khung]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Đã tồn tại số khung] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Đã tồn tại số khung] but found []
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.ttt.TEST.TestPhieuNhap.checkExistSoKhungTest(TestPhieuNhap.java:38)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1207)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkExistSoKhungTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@5b94b04d]" started-at="2023-12-07T14:01:27 ICT" name="checkNullTest" data-provider="checkNullDataProvider" finished-at="2023-12-07T14:01:27 ICT" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[SK123456789123456]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SM456]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1000]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@5b94b04d]" started-at="2023-12-07T14:01:27 ICT" name="checkNullTest" data-provider="checkNullDataProvider" finished-at="2023-12-07T14:01:27 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[SK123456789123456]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SM456]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-1000]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Không được nhập âm giá]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@5b94b04d]" started-at="2023-12-07T14:01:27 ICT" name="checkNullTest" data-provider="checkNullDataProvider" finished-at="2023-12-07T14:01:27 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SM456]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1000]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Vui lòng nhập số khung]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@5b94b04d]" started-at="2023-12-07T14:01:27 ICT" name="checkNullTest" data-provider="checkNullDataProvider" finished-at="2023-12-07T14:01:27 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[SK123456789123456]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1000]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Vui lòng nhập số máy]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@5b94b04d]" started-at="2023-12-07T14:01:27 ICT" name="checkNullTest" data-provider="checkNullDataProvider" finished-at="2023-12-07T14:01:27 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[SK123456789123456]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SM456]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Giá nhập sai kiểu dữ liệu]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@5b94b04d]" started-at="2023-12-07T14:01:27 ICT" name="checkNullTest" data-provider="checkNullDataProvider" finished-at="2023-12-07T14:01:27 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Vui lòng nhập dữ liệu]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@5b94b04d]" started-at="2023-12-07T14:01:27 ICT" name="checkNullTest" data-provider="checkNullDataProvider" finished-at="2023-12-07T14:01:27 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[SK123456789123456]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SM456]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Giá nhập sai kiểu dữ liệu]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@5b94b04d]" started-at="2023-12-07T14:01:27 ICT" name="checkNullTest" data-provider="checkNullDataProvider" finished-at="2023-12-07T14:01:27 ICT" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[SK123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SM456]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1000]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Số khung phải có 17 ký tự]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Số khung phải có 17 ký tự] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Số khung phải có 17 ký tự] but found []
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.ttt.TEST.TestPhieuNhap.checkNullTest(TestPhieuNhap.java:78)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1207)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="checkNullTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@5b94b04d]" started-at="2023-12-07T14:01:27 ICT" name="checkNullTest" data-provider="checkNullDataProvider" finished-at="2023-12-07T14:01:27 ICT" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[SK123456789123456SK]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SM456]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1000]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Số khung phải có 17 ký tự]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Số khung phải có 17 ký tự] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Số khung phải có 17 ký tự] but found []
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.ttt.TEST.TestPhieuNhap.checkNullTest(TestPhieuNhap.java:78)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1207)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNullTest -->
        <test-method signature="getFormChiTietPhieuNhapSuaTest(java.lang.String,java.lang.String,java.util.Date,java.util.Date,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,boolean)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@5b94b04d]" started-at="2023-12-07T14:01:27 ICT" name="getFormChiTietPhieuNhapSuaTest" data-provider="getFormChiTietPhieuNhapSua" finished-at="2023-12-07T14:01:27 ICT" duration-ms="53" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[PN2023081700007]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[NV2023073000009]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Thu Dec 07 14:01:27 ICT 2023]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Thu Dec 07 14:01:27 ICT 2023]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[NV2023072100007]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[VT04]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[FCJLTC]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[SK 12345678]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[SM987654]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[900]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:819)
at org.testng.Assert.assertEquals(Assert.java:829)
at com.ttt.TEST.TestPhieuNhap.getFormChiTietPhieuNhapSuaTest(TestPhieuNhap.java:184)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1207)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFormChiTietPhieuNhapSuaTest -->
        <test-method signature="getFormChiTietPhieuNhapThemTest(java.lang.String,java.lang.String,java.util.Date,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@5b94b04d]" started-at="2023-12-07T14:01:27 ICT" name="getFormChiTietPhieuNhapThemTest" data-provider="getFormChiTietPhieuNhapThem" finished-at="2023-12-07T14:01:27 ICT" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[PN2023120500007]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[NV2023073000009]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Thu Dec 07 14:01:27 ICT 2023]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[VT04]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[XZU730LMB]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[SK 12345678]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[SM987654]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[900]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:819)
at org.testng.Assert.assertEquals(Assert.java:829)
at com.ttt.TEST.TestPhieuNhap.getFormChiTietPhieuNhapThemTest(TestPhieuNhap.java:132)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1207)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFormChiTietPhieuNhapThemTest -->
        <test-method signature="getFormPNTest(java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@5b94b04d]" started-at="2023-12-07T14:01:27 ICT" name="getFormPNTest" data-provider="dataGeFormPN" finished-at="2023-12-07T14:01:27 ICT" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[them]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[PN2023081700008]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[NV2023073000009]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Test case checkNull false]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFormPNTest -->
        <test-method signature="getFormPNTest(java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@5b94b04d]" started-at="2023-12-07T14:01:27 ICT" name="getFormPNTest" data-provider="dataGeFormPN" finished-at="2023-12-07T14:01:27 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sua]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[PN2023072100005]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[NV2023073000009]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Test case checkNull false]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFormPNTest -->
        <test-method signature="getFormPNTest(java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@5b94b04d]" started-at="2023-12-07T14:01:27 ICT" name="getFormPNTest" data-provider="dataGeFormPN" finished-at="2023-12-07T14:01:27 ICT" duration-ms="34" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sua]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[PN2023072100005]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[NV2023073000009]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Test case checkNull true]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[getFormPN Successfully]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFormPNTest -->
        <test-method signature="getFormPNTest(java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@5b94b04d]" started-at="2023-12-07T14:01:27 ICT" name="getFormPNTest" data-provider="dataGeFormPN" finished-at="2023-12-07T14:01:27 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[them]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[PN2023081700008]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[NV2023073000009]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Test case checkNull true]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[getFormPN Successfully]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFormPNTest -->
        <test-method signature="isExist_PhieuNhapTest(java.lang.String,boolean)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@5b94b04d]" started-at="2023-12-07T14:01:27 ICT" name="isExist_PhieuNhapTest" data-provider="dataIsExist_PhieuNhap" finished-at="2023-12-07T14:01:27 ICT" duration-ms="35" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PN2023072700006]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isExist_PhieuNhapTest -->
        <test-method signature="isExist_PhieuNhapTest(java.lang.String,boolean)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@5b94b04d]" started-at="2023-12-07T14:01:27 ICT" name="isExist_PhieuNhapTest" data-provider="dataIsExist_PhieuNhap" finished-at="2023-12-07T14:01:27 ICT" duration-ms="33" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PN2023072100003]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isExist_PhieuNhapTest -->
        <test-method signature="isExist_PhieuNhapTest(java.lang.String,boolean)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@5b94b04d]" started-at="2023-12-07T14:01:27 ICT" name="isExist_PhieuNhapTest" data-provider="dataIsExist_PhieuNhap" finished-at="2023-12-07T14:01:27 ICT" duration-ms="29" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PN2023120500003]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isExist_PhieuNhapTest -->
        <test-method signature="isExist_PhieuNhapTest(java.lang.String,boolean)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@5b94b04d]" started-at="2023-12-07T14:01:27 ICT" name="isExist_PhieuNhapTest" data-provider="dataIsExist_PhieuNhap" finished-at="2023-12-07T14:01:27 ICT" duration-ms="28" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PN2023120500006]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isExist_PhieuNhapTest -->
        <test-method signature="suaPhieuNhapTest(java.lang.String,java.lang.String,java.util.Date,java.util.Date,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,java.lang.String,java.util.Date,java.lang.String,java.util.Date,boolean,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@5b94b04d]" started-at="2023-12-07T14:01:27 ICT" name="suaPhieuNhapTest" data-provider="dataSuaPhieuNhap" finished-at="2023-12-07T14:01:27 ICT" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PN2023120500007]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[NV2023073000009]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Thu Dec 07 14:01:27 ICT 2023]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Thu Dec 07 14:01:27 ICT 2023]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[NV2023081700016]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[sua PN]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="7">
              <value is-null="true"/>
            </param>
            <param index="8">
              <value is-null="true"/>
            </param>
            <param index="9">
              <value is-null="true"/>
            </param>
            <param index="10">
              <value>
                <![CDATA[VT03]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[FCJLTC]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[SK3399]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[SM6771]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[700]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="19">
              <value is-null="true"/>
            </param>
            <param index="20">
              <value is-null="true"/>
            </param>
            <param index="21">
              <value is-null="true"/>
            </param>
            <param index="22">
              <value is-null="true"/>
            </param>
            <param index="23">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="24">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suaPhieuNhapTest -->
        <test-method signature="suaPhieuNhapTest(java.lang.String,java.lang.String,java.util.Date,java.util.Date,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,java.lang.String,java.util.Date,java.lang.String,java.util.Date,boolean,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@5b94b04d]" started-at="2023-12-07T14:01:27 ICT" name="suaPhieuNhapTest" data-provider="dataSuaPhieuNhap" finished-at="2023-12-07T14:01:27 ICT" duration-ms="117" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PN2023120500007]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[NV2023073000009]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Thu Dec 07 14:01:27 ICT 2023]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Thu Dec 07 14:01:27 ICT 2023]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[NV2023081700016]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[sua PN]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="7">
              <value is-null="true"/>
            </param>
            <param index="8">
              <value is-null="true"/>
            </param>
            <param index="9">
              <value is-null="true"/>
            </param>
            <param index="10">
              <value>
                <![CDATA[VT03]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[FCJLTC]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[SK3949]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[SM7171]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[700]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="19">
              <value is-null="true"/>
            </param>
            <param index="20">
              <value is-null="true"/>
            </param>
            <param index="21">
              <value is-null="true"/>
            </param>
            <param index="22">
              <value is-null="true"/>
            </param>
            <param index="23">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="24">
              <value>
                <![CDATA[Sửa thành công]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suaPhieuNhapTest -->
        <test-method signature="themPhieuNhapTest(java.lang.String,java.lang.String,java.util.Date,java.util.Date,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,java.lang.String,java.util.Date,java.lang.String,java.util.Date,boolean,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@5b94b04d]" started-at="2023-12-07T14:01:27 ICT" name="themPhieuNhapTest" data-provider="datathemPhieuNhap" finished-at="2023-12-07T14:01:28 ICT" duration-ms="488" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[PN2023120500007]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[NV2023073000009]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Thu Dec 07 14:01:27 ICT 2023]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[dienGiai]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="7">
              <value is-null="true"/>
            </param>
            <param index="8">
              <value is-null="true"/>
            </param>
            <param index="9">
              <value is-null="true"/>
            </param>
            <param index="10">
              <value>
                <![CDATA[VT03]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[FCJLTC]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[SK5051]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[SM7375]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[700]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="19">
              <value is-null="true"/>
            </param>
            <param index="20">
              <value is-null="true"/>
            </param>
            <param index="21">
              <value is-null="true"/>
            </param>
            <param index="22">
              <value is-null="true"/>
            </param>
            <param index="23">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="24">
              <value>
                <![CDATA[Thêm mới thành công]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Thêm mới thành công] but found [Đã thêm xe vào phiếu nhập]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Thêm mới thành công] but found [Đã thêm xe vào phiếu nhập]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.ttt.TEST.TestPhieuNhap.themPhieuNhapTest(TestPhieuNhap.java:370)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1207)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themPhieuNhapTest -->
        <test-method signature="themPhieuNhapTest(java.lang.String,java.lang.String,java.util.Date,java.util.Date,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,java.lang.String,java.util.Date,java.lang.String,java.util.Date,boolean,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@5b94b04d]" started-at="2023-12-07T14:01:28 ICT" name="themPhieuNhapTest" data-provider="datathemPhieuNhap" finished-at="2023-12-07T14:01:28 ICT" duration-ms="109" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PN2023072100003]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[NV2023073000009]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Thu Dec 07 14:01:27 ICT 2023]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value>
                <![CDATA[dienGiai]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="7">
              <value is-null="true"/>
            </param>
            <param index="8">
              <value is-null="true"/>
            </param>
            <param index="9">
              <value is-null="true"/>
            </param>
            <param index="10">
              <value>
                <![CDATA[VT03]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[FCJLTC]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[SK8054]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[SM7979]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[700]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="19">
              <value is-null="true"/>
            </param>
            <param index="20">
              <value is-null="true"/>
            </param>
            <param index="21">
              <value is-null="true"/>
            </param>
            <param index="22">
              <value is-null="true"/>
            </param>
            <param index="23">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="24">
              <value>
                <![CDATA[Đã thêm xe vào phiếu nhập]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themPhieuNhapTest -->
        <test-method signature="themXeVaoPhieuNhapTest(boolean,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@5b94b04d]" started-at="2023-12-07T14:01:28 ICT" name="themXeVaoPhieuNhapTest" data-provider="dataChiTietPhieuNhap" finished-at="2023-12-07T14:01:28 ICT" duration-ms="24" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SK 7543]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[PN2023072100004]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Đã tồn tại số khung]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themXeVaoPhieuNhapTest -->
        <test-method signature="themXeVaoPhieuNhapTest(boolean,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@5b94b04d]" started-at="2023-12-07T14:01:28 ICT" name="themXeVaoPhieuNhapTest" data-provider="dataChiTietPhieuNhap" finished-at="2023-12-07T14:01:28 ICT" duration-ms="27" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SK8054]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[PN2023072100004]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Đã tồn tại số khung]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Đã tồn tại số khung] but found [Đã thêm xe vào phiếu nhập]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Đã tồn tại số khung] but found [Đã thêm xe vào phiếu nhập]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.ttt.TEST.TestPhieuNhap.themXeVaoPhieuNhapTest(TestPhieuNhap.java:270)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1207)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themXeVaoPhieuNhapTest -->
        <test-method signature="themXeVaoPhieuNhapTest(boolean,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@5b94b04d]" started-at="2023-12-07T14:01:28 ICT" name="themXeVaoPhieuNhapTest" data-provider="dataChiTietPhieuNhap" finished-at="2023-12-07T14:01:28 ICT" duration-ms="35" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SK3949]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[PN2023120500003]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Đã tồn tại số khung]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Đã tồn tại số khung] but found [Đã thêm xe vào phiếu nhập]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Đã tồn tại số khung] but found [Đã thêm xe vào phiếu nhập]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.ttt.TEST.TestPhieuNhap.themXeVaoPhieuNhapTest(TestPhieuNhap.java:270)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1207)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themXeVaoPhieuNhapTest -->
        <test-method signature="themXeVaoPhieuNhapTest(boolean,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@5b94b04d]" started-at="2023-12-07T14:01:28 ICT" name="themXeVaoPhieuNhapTest" data-provider="dataChiTietPhieuNhap" finished-at="2023-12-07T14:01:28 ICT" duration-ms="28" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SK7122]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[PN2023120500004]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Đã thêm xe vào phiếu nhập]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themXeVaoPhieuNhapTest -->
        <test-method signature="themXeVaoPhieuNhapTest(boolean,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@5b94b04d]" started-at="2023-12-07T14:01:28 ICT" name="themXeVaoPhieuNhapTest" data-provider="dataChiTietPhieuNhap" finished-at="2023-12-07T14:01:28 ICT" duration-ms="23" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SK7123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[PN2023072100002]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Đã thêm xe vào phiếu nhập]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themXeVaoPhieuNhapTest -->
        <test-method signature="themXeVaoPhieuNhapTest(boolean,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@5b94b04d]" started-at="2023-12-07T14:01:28 ICT" name="themXeVaoPhieuNhapTest" data-provider="dataChiTietPhieuNhap" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SK7143]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[PN2023072100004]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Dữ liệu chưa hợp lệ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- themXeVaoPhieuNhapTest -->
        <test-method signature="xoaTest(java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,double,boolean,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@5b94b04d]" started-at="2023-12-07T14:01:28 ICT" name="xoaTest" data-provider="dataXoa" finished-at="2023-12-07T14:01:28 ICT" duration-ms="31" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PN2023120600006]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Thông báo phiếu nhập chưa có trong cơ sở dữ liệu. Vui lòng chọn phiếu nhập khác]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xoaTest -->
        <test-method signature="xoaTest(java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,double,boolean,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@5b94b04d]" started-at="2023-12-07T14:01:28 ICT" name="xoaTest" data-provider="dataXoa" finished-at="2023-12-07T14:01:28 ICT" duration-ms="24" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PN2023081700007]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[SK 1234]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[SM 112]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[900]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Bạn không xác nhận xóa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xoaTest -->
        <test-method signature="xoaTest(java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,double,boolean,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@5b94b04d]" started-at="2023-12-07T14:01:28 ICT" name="xoaTest" data-provider="dataXoa" finished-at="2023-12-07T14:01:28 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PN2023072100005]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[SK 1091]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[SM 4523]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[900]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Bạn không có quyền xóa phiếu nhập]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xoaTest -->
        <test-method signature="xoaTest(java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,double,boolean,java.lang.String)[pri:0, instance:com.ttt.TEST.TestPhieuNhap@5b94b04d]" started-at="2023-12-07T14:01:28 ICT" name="xoaTest" data-provider="dataXoa" finished-at="2023-12-07T14:01:28 ICT" duration-ms="19" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PN2023072100003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[SK8054]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[SM7979]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[700]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Xóa thành công]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xoaTest -->
      </class> <!-- com.ttt.TEST.TestPhieuNhap -->
    </test> <!-- TestPhieuNhap -->
  </suite> <!-- SuitePhieuNhap -->
</testng-results>
